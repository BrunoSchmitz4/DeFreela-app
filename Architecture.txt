src/
    assets/ Imagens, ícones, fontes e logo
    components/ Componentes atômicos reutilizáveis
        Header/ Cabeçalho global
        PrivateRoute/ Wrapper de rotas privadas (pra fins de segurança)
        ProjectCard/ Card de projetos
        RouterLink/ Botão de navegação de rotas
    context/ Onde fica o React Context API. Serve pra mantermos os estados globais (como usuário logado e o tema da aplicação)
        authContext.js mantem o estado do usuário logado
        themeContext.js (vai que queiramos um darkMode) mantem o estado do tema da aplicação
    hooks/ Onde fica os hooks customizados (são as lógicas repetitivas de React que não faz sentido criar um componente pra elas)
    pages/
        Auth/ Tela de Login
        BasePage/ Layout Wrapperddas rotas principais
        Contract/ Página de geração de contratos
        Home/ Página inicial
        NotFound/ Rota que garante retorno para a rota Home caso o usuário navegue para uma inexistente
        Profile/ Tela de Perfil do usuário
        Projects/ Tela de listagem de projetos/freelas (tanto de freelancers quanto de empresas)
    services/ (Aqui faremos as requisições externas com API e Axios)
        api.js aqui faremos a configuração central do cliente Axios
        authService.js funções específicas de autenticação (login, registro etc) obs: aqui provavelmente faremos um service de project e contract.
    store/ Espaço para uso de Redux ou Zustant (pode ser removido caso a gente fique apenas com o context)
    utils/ Funções e helpers não dependentes do Reat como formatar datas, mascarar CPF/CNPJ, validação de email etc (ver com o Felipe sobre regras de negócio que se apliquem)
    index.css
    index.js
    routes.js